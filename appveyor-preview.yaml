version: '#{build}'
pull_requests:
  do_not_increment_build_number: true
branches:
  only:
  - preview
skip_tags: true
skip_branch_with_pr: true
image: Visual Studio 2022
configuration: Release
platform: x64
clone_script:
- cmd: >-
    git clone -q --branch=preview https://github.com/CollapseLauncher/Collapse.git C:\projects\collapse-preview

    git checkout origin/preview
install:
- cmd: >-
    echo Init submodules

    git submodule update --init --force --depth=1 --recursive

    echo.


    echo Install InnoSetup

    set innoinstall=%temp%\innosetup.exe

    curl "https://files.jrsoftware.org/is/6/innosetup-6.2.2.exe" --output %innoinstall%


    cmd /c start /wait %innoinstall% /VERYSILENT /SUPPRESSMSGBOXES /NORESTART /SP-

    echo.


    echo Install Node.JS

    PowerShell Install-Product node ''
build_script:
- cmd: >-
    @echo on

    setlocal enabledelayedexpansion


    echo Setting environments...

    set name=Collapse

    set channel=preview

    set squirrel="C:\Users\appveyor\.nuget\packages\clowd.squirrel\2.11.1\tools"

    set inno="C:\Program Files (x86)\Inno Setup 6\ISCC.exe"

    echo.


    echo Get current Unix timestamp

    for /f %%T in ('node -e "console.log(Math.floor(Date.now() / 1000))"') do set unixtime=%%T

    echo Got unixtime! %unixtime%


    echo Build app...

    dotnet restore

    dotnet publish CollapseLauncher -p:PublishProfile=Publish-PreviewRelease -p:PublishDir=".\preview-build\"


    echo Getting app version...

    for /f "tokens=2 delims==" %%I in ('wmic datafile where "name='C:\\projects\\collapse-preview\\CollapseLauncher\\preview-build\\CollapseLauncher.exe'" get Version /value ^| find "Version"') do set "version_untrim=%%I"

    set "version=%version_untrim:~0,-2%"

    echo Got version %version%

    echo.


    echo Setting up Deployable Resources...

    mkdir DeployResource

    mkdir DeployResource\app-%version%

    xcopy "CollapseLauncher\preview-build\*" "DeployResource\app-%version%\" /E /K /Y /I


    echo Preparing stub and updater...

    copy %squirrel%\stubexecutable.exe DeployResource\CollapseLauncher.exe

    copy %squirrel%\Update.exe DeployResource\Update.exe


    %squirrel%\rcedit.exe DeployResource\CollapseLauncher.exe --set-file-version %version% --set-product-version %version% --set-icon CollapseLauncher\icon.ico --set-requested-execution-level requireAdministrator


    echo Making innosetup file...

    mkdir InnoTarget

    %inno% /O+ /O "InstallerProp\DeployInstaller-%channel%-AppVeyor.iss"


    echo Archiving portable build...

    mkdir PortableTarget

    cd DeployResource

    7z a -t7z -m0=lzma2 -mx=9 -aoa -mmt=2 -mfb=273 -md=128m -ms=on "..\PortableTarget\CL-%version%-%channel%_Portable.7z" *

    cd ..


    echo Preparing for Squirrel target...

    mkdir SquirrelTarget

    mkdir SquirrelKitchen

    xcopy "CollapseLauncher\preview-build\*" "SquirrelKitchen" /E /K /Y /I


    echo Building Squirrel target...

    %squirrel%\Squirrel.exe http-down --url=https://r2.bagelnl.my.id/cl-cdn/squirrel/preview/ -r ./SquirrelTarget/

    %squirrel%\Squirrel.exe pack --packId="%name%" --packVersion="%version%" --includePDB --packDir="SquirrelKitchen" --releaseDir="SquirrelTarget"

    del SquirrelTarget\CollapseSetup.exe


    echo Building ApplyUpdate latest package...

    mkdir ApplyUpdateKitchen

    cd DeployResource

    7z a -ttar "..\ApplyUpdateKitchen\latest-%channel%.tar" .

    cd ..


    curl "https://r2.bagelnl.my.id/cl-cdn/ApplyUpdate.exe" --output ApplyUpdate.exe

    ApplyUpdate.exe compress "ApplyUpdateKitchen\latest-%channel%.tar" "SquirrelTarget\latest"


    echo Building ApplyUpdate targeting packs...

    mkdir ApplyUpdateTarget

    copy ApplyUpdate.exe ApplyUpdateTarget

    echo %channel%>ApplyUpdateTarget\release


    echo Get the size of ApplyUpdate tool

    FOR /F "usebackq" %%A IN ('ApplyUpdateTarget\ApplyUpdate.exe') DO set applyupdatesize=%%~zA

    FOR /F "usebackq" %%A IN ('ApplyUpdateTarget\release') DO set releasesize=%%~zA


    echo Get the MD5 hash of ApplyUpdate tool

    FOR /F %%B IN ('certutil -hashfile ApplyUpdateTarget\ApplyUpdate.exe MD5 ^| find /v "hash"') DO set applyupdatehash=%%B

    FOR /F %%B IN ('certutil -hashfile ApplyUpdateTarget\release MD5 ^| find /v "hash"') DO set releasehash=%%B


    echo Print out the fileindex.json file

    echo ^{"ver":"%version%","time":%unixtime%,"f":^[^{"p":"ApplyUpdate.exe","crc":"%applyupdatehash%","s":%applyupdatesize%^},^{"p":"release","crc":"%releasehash%","s":%releasesize%^}^]^}>ApplyUpdateTarget\fileindex.json
test: off
artifacts:
- path: CollapseLauncher\preview-build\
  name: BuildArtifact-Preview
- path: PortableTarget\*.7z
  name: Publish-Collapse-PortablePackage-Preview
- path: InnoTarget\*.exe
  name: Publish-InstallerPackage-Preview
- path: SquirrelTarget
  name: SquirrelUpdateFiles-Preview
- path: ApplyUpdateTarget
  name: ApplyUpdateFiles-Preview
deploy:
- provider: Webhook
  url: https://app.signpath.io/API/v1/6988fc60-19f4-4710-8eb7-e837c60c83b4/Integrations/AppVeyor?ProjectSlug=Collapse&SigningPolicySlug=test-signing&ArtifactConfigurationSlug=initial
  authorization:
    secure: B8zpDU6wkKuCBRz65VfTFxUCxY7HniWmRbJP/E3tE40kGmHKdaFnMCDSURQFWwR1pCcXHqbkJd3YX76tnTXQow==
  on:
    branch: preview
notifications:
- provider: Email
  to:
  - dzakibagus@gmail.com
  on_build_success: true
  on_build_failure: true
  on_build_status_changed: true